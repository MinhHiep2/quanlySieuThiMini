<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD0
        DAAAAk1TRnQBSQFMAwEBAAEQAQABEAEAAUUBAAE2AQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        ARQBAQIAATYDAAEBAQABCAUAATgBOhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/IwABGgJZAXoBmgEa
        ARsB9AH2Af//AAoAAfYCMQg4AVkBmgH2/wAHAAH/AzEJOAFZAfT/AAcAAXkDMQo4ARoB//8ABQABmgQx
        CjgBegH//wAEAAEbBjEJOAFZAf/lAAL/FvQB/wQAAfYHMQk4AVkBG+IAAfQBCRSzBNQB8wUAAVgHMQo4
        AZoB/94AAf8BCRazBNQB3QUAAZkJMQk4AXoB/9wAAf8BCRezBNQB2wUAAfQBWAkxCTgBWQH02wAB8hiz
        BdQB/wUAAfYBeQkxCjgBGgH/2QABtBizBdQB3AH/BQAB/wGaCTEKOAGaAf/YABmzBtQBCQH/BgABGgox
        CTgBWQH/1wAZswfUAdsB/wYAAfQBWAkxCTgBWQEb1gAZswnUAfQGAAH/AXkJMQo4ARoB/9QAC7MOtArb
        AfMGAAH/ARoKMQk4AXoB/9MACbMBvA7xAfQL/wH0Af8GAAEbAVIJMQk4AVkB9tIACLMBtA/xAfQM/wH0
        Af8GAAH2AXkJMQo4ARvRAAmzAQkO8QH0Dv8B9AYAAf8BmgkxCjgBmgH/zwAZsw/UARkB/wUAAf8BGgox
        CTgBGs8AGbMQ1AHcAf8GAAH0AVgJMQg4AVnPABmzEdQB1QH/BgAB/wF5CTEHOAFZzwAZsxPUAfMGAAH/
        AZoJMQY4AZrPAAmzAbsO8AHzDf8B9AHcBdQBCQH/BgABGwFSCTEDOAFZAfbPAAizAbQP8QH0D/8B1QXU
        AdsB/wYAAf8BWAkxATgBegH/0AAJswHwDvEB9A7/AfQI1AH0BgAB/wF5CDEBmgH/0QAKsw60DtwB2wnU
        AdUHAAH/ARoFMQFSARvTABmzF9QB1QkAAfYBGgJ5ARoB9tQAGbMX1AHV4wAZsxfUAdXjAAmzAbQOuw4J
        AdwB1QjUAdXjAAmzD/EB9A//CNQB1eMACLMBtA/xAfQP/wjUAdXjAAmzAbQPCQ4ZAdsI1AHV4wAZsxfU
        AdXjABmzF9QB1eMAGbMX1AHV4wAZsxfUAdXjABmzF9QB1eMADrMLrQmzDtQB1eMADLMBrQusDK0M1AHV
        4wAMswysDa0L1AHV4wABtAqzAa0MrA2tC9QBCeMAAfIKswGtDKwNrQGzCtQB9OMAAf8BCQmzAa0MrA2t
        AbMJ1AEJ5QAB/wEJCLMBrQysDa0BswjUARkB/+cAAfQBCQazAa0MrA2tAbMG1AEJAf/rAAL/BPQBuwys
        Da0BCQT0Av/zAAHzAa0LrA2tAf/6AAH0BAkHrAitAwkB3QH//wABAAG1BqwHrQEJ/wAGAAH/AbQFrAat
        AbQB//8ABwAB/wG7Aa0DrAWtAQkB//8ACgAB9AEJAbQCrQGzAbQBCQH/9wABQgFNAT4HAAE+AwABKAMA
        ARQBAQIAATYDAAEBAQABAQUAAZgBBxYAA/8BAAT/AcABDwL/AfgbAAT/AYABAQL/AfgbAAT/AYABAAL/
        AfgbAAT/AcABAAE/Af8B+BsABP8BwAEAAR8B/wH4GwAE/wHAAQABDwH/AfgbAAH4AgABAwHAAQABBwH/
        AfgbAAHgAgABAwHgAQABAQH/AfgbAAGAAgABAwHgAgAB/wH4HgABAwHgAgABfwH4HgABAQHwAgABHwH4
        HwAB+AIAAQ8B+B8AAX4CAAEHAfgfAAE/AgABAwH4HwABHwGAAgAB+B8AAQ8BwAIAAXgfAAEDAfACAAE4
        HwABAQH4AgABGCAAAfwjAAE+IwABHwGAIgABDwHAIgABBwHgIgABAQH4IwAB/AEAAQghAAF+AQABGCEA
        AX8BAAF4IQABfwHAAfghAAF/Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/Af8B+CEAAX8B/wH4IQABfwH/
        AfghAAF/Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/Af8B+CEA
        AX8B/wH4IQABfwH/AfghAAF/Af8B+CEAAv8B+BsAAYAFAAL/AfgbAAHgBAABAwL/AfgbAAH4BAABDwL/
        AfgbAAH/AeACAAEDA/8B+BsAAf8B8AIAAQcD/wH4GwAC/wGAAQAE/wH4GwAC/wGAAQAE/wH4GwAC/wHA
        AQEE/wH4GwAC/wHwAQcE/wH4GwAL
</value>
  </data>
</root>