<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD6
        DAAAAk1TRnQBSQFMAwEBAAEIAQABCAEAAUUBAAE2AQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        ARQBAQIAATYDAAEBAQABCAUAATgBOhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/IwABGgJZAXoBmgEa
        ARsB9AH2Af//AAoAAfYCMQg4AVkBmgH2/wAHAAH/AzEJOAFZAfT/AAcAAXkDMQo4ARoB//8ABQABmgQx
        CjgBegH//wAEAAEbBjEJOAFZAfXlAAH/AfUW9AH/BAAB9gcxCTgBWQEb4gAB9AEJFLME1AHzBQABWAcx
        CjgBmgH/3gAB/wEJFrME1AHdBQABmQkxCTgBegH/3AAB/wEJF7ME1AHbBQAB9AFYCTEJOAFZAfTbAAHy
        GLMF1AH1BQAB9gF5CTEKOAEaAf/ZAAG0GLMF1AHcAf8FAAH/AZoJMQo4AZoB/9gAGbMG1AEJAf8GAAEa
        CjEJOAFZAfXXABmzB9QB2wH/BgAB9AFYCTEJOAFZARvWABmzCdQB9AYAAf8BeQkxCjgBGgH/1AALsw60
        CtsB8wYAAf8BGgoxCTgBegH/0wAJswG8DvEB9Av/AfQB/wYAARsBUgkxCTgBWQH20gAIswG0D/EB9Az/
        AfQB/wYAAfYBeQkxCjgBG9EACbMBCQ7xAfQO/wH0BgAB/wGaCTEKOAGaAf/PABmzD9QBGQH/BQAB/wEa
        CjEJOAEazwAZsxDUAdwB/wYAAfQBWAkxCDgBWc8AGbMR1AHVAfUGAAH/AXkJMQc4AVnPABmzE9QB8wYA
        Af8BmgkxBjgBms8ACbMBuw7wAfMN9QH0AdwF1AEJAf8GAAEbAVIJMQM4AVkB9s8ACLMBtA/xAfQP/wHV
        BdQB2wH/BgAB9QFYCTEBOAF6Af/QAAmzAfAO8QH0Dv8B9AjUAfQGAAH/AXkIMQGaAf/RAAqzDrQO3AHb
        CdQB1QcAAf8BGgUxAVIBG9MAGbMX1AHVCQAB9gEaAnkBGgH21AAZsxfUAdXjABmzF9QB1eMACbMBtA67
        DgkB3AHVCNQB1eMACbMP8QH0D/8I1AHV4wAIswG0D/EB9A//CNQB1eMACbMBtA8JDhkB2wjUAdXjABmz
        F9QB1eMAGbMX1AHV4wAZsxfUAdXjABmzF9QB1eMAGbMX1AHV4wAOswutCbMO1AHV4wAMswGtC6wMrQzU
        AdXjAAyzDKwNrQvUAdXjAAG0CrMBrQysDa0L1AEJ4wAB8gqzAa0MrA2tAbMK1AH04wAB/wEJCbMBrQys
        Da0BswnUAQnlAAH/AQkIswGtDKwNrQGzCNQBGQH/5wAB9AEJBrMBrQysDa0BswbUAQkB9esAAf8B9QT0
        AbsMrA2tAQkE9AH1Af/zAAHzAa0LrA2tAfX6AAH0BAkHrAitAwkB3QH1/wABAAG1BqwHrQEJ/wAGAAH/
        AbQFrAatAbQB//8ABwAB/wG7Aa0DrAWtAQkB//8ACgAB9AEJAbQCrQGzAbQBCQH19wABQgFNAT4HAAE+
        AwABKAMAARQBAQIAATYDAAEBAQABAQUAAZgBBxYAA/8BAAT/AcABDwL/AfgbAAT/AYABAQL/AfgbAAT/
        AYABAAL/AfgbAAT/AcABAAE/Af8B+BsABP8BwAEAAR8B/wH4GwAE/wHAAQABDwH/AfgbAAH4AgABAwHA
        AQABBwH/AfgbAAHgAgABAwHgAQABAQH/AfgbAAGAAgABAwHgAgAB/wH4HgABAwHgAgABfwH4HgABAQHw
        AgABHwH4HwAB+AIAAQ8B+B8AAX4CAAEHAfgfAAE/AgABAwH4HwABHwGAAgAB+B8AAQ8BwAIAAXgfAAED
        AfACAAE4HwABAQH4AgABGCAAAfwjAAE+IwABHwGAIgABDwHAIgABBwHgIgABAQH4IwAB/AEAAQghAAF+
        AQABGCEAAX8BAAF4IQABfwHAAfghAAF/Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/Af8B+CEAAX8B/wH4
        IQABfwH/AfghAAF/Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/
        Af8B+CEAAX8B/wH4IQABfwH/AfghAAF/Af8B+CEAAv8B+BsAAYAFAAL/AfgbAAHgBAABAwL/AfgbAAH4
        BAABDwL/AfgbAAH/AeACAAEDA/8B+BsAAf8B8AIAAQcD/wH4GwAC/wGAAQAE/wH4GwAC/wGAAQAE/wH4
        GwAC/wHAAQEE/wH4GwAC/wHwAQcE/wH4GwAL
</value>
  </data>
</root>